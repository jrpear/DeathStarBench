/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef SocialGraphStorageService_H
#define SocialGraphStorageService_H

#include <thrift/TDispatchProcessor.h>
#include <thrift/async/TConcurrentClientSyncInfo.h>
#include <memory>
#include "social_network_types.h"

namespace social_network {

#ifdef _MSC_VER
  #pragma warning( push )
  #pragma warning (disable : 4250 ) //inheriting methods via dominance 
#endif

class SocialGraphStorageServiceIf {
 public:
  virtual ~SocialGraphStorageServiceIf() {}
  virtual void ReadFollowers(std::vector<int64_t> & _return, const int64_t user_id) = 0;
  virtual void ReadFollowees(std::vector<int64_t> & _return, const int64_t user_id) = 0;
  virtual void AddFollower(const int64_t followee_id, const int64_t follower_id) = 0;
  virtual void AddFollowee(const int64_t follower_id, const int64_t followee_id) = 0;
  virtual void RemoveFollower(const int64_t followee_id, const int64_t follower_id) = 0;
  virtual void RemoveFollowee(const int64_t follower_id, const int64_t followee_id) = 0;
};

class SocialGraphStorageServiceIfFactory {
 public:
  typedef SocialGraphStorageServiceIf Handler;

  virtual ~SocialGraphStorageServiceIfFactory() {}

  virtual SocialGraphStorageServiceIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(SocialGraphStorageServiceIf* /* handler */) = 0;
  };

class SocialGraphStorageServiceIfSingletonFactory : virtual public SocialGraphStorageServiceIfFactory {
 public:
  SocialGraphStorageServiceIfSingletonFactory(const ::std::shared_ptr<SocialGraphStorageServiceIf>& iface) : iface_(iface) {}
  virtual ~SocialGraphStorageServiceIfSingletonFactory() {}

  virtual SocialGraphStorageServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) override {
    return iface_.get();
  }
  virtual void releaseHandler(SocialGraphStorageServiceIf* /* handler */) override {}

 protected:
  ::std::shared_ptr<SocialGraphStorageServiceIf> iface_;
};

class SocialGraphStorageServiceNull : virtual public SocialGraphStorageServiceIf {
 public:
  virtual ~SocialGraphStorageServiceNull() {}
  void ReadFollowers(std::vector<int64_t> & /* _return */, const int64_t /* user_id */) override {
    return;
  }
  void ReadFollowees(std::vector<int64_t> & /* _return */, const int64_t /* user_id */) override {
    return;
  }
  void AddFollower(const int64_t /* followee_id */, const int64_t /* follower_id */) override {
    return;
  }
  void AddFollowee(const int64_t /* follower_id */, const int64_t /* followee_id */) override {
    return;
  }
  void RemoveFollower(const int64_t /* followee_id */, const int64_t /* follower_id */) override {
    return;
  }
  void RemoveFollowee(const int64_t /* follower_id */, const int64_t /* followee_id */) override {
    return;
  }
};

typedef struct _SocialGraphStorageService_ReadFollowers_args__isset {
  _SocialGraphStorageService_ReadFollowers_args__isset() : user_id(false) {}
  bool user_id :1;
} _SocialGraphStorageService_ReadFollowers_args__isset;

class SocialGraphStorageService_ReadFollowers_args {
 public:

  SocialGraphStorageService_ReadFollowers_args(const SocialGraphStorageService_ReadFollowers_args&) noexcept;
  SocialGraphStorageService_ReadFollowers_args& operator=(const SocialGraphStorageService_ReadFollowers_args&) noexcept;
  SocialGraphStorageService_ReadFollowers_args() noexcept
                                               : user_id(0) {
  }

  virtual ~SocialGraphStorageService_ReadFollowers_args() noexcept;
  int64_t user_id;

  _SocialGraphStorageService_ReadFollowers_args__isset __isset;

  void __set_user_id(const int64_t val);

  bool operator == (const SocialGraphStorageService_ReadFollowers_args & rhs) const
  {
    if (!(user_id == rhs.user_id))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_ReadFollowers_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_ReadFollowers_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_ReadFollowers_pargs {
 public:


  virtual ~SocialGraphStorageService_ReadFollowers_pargs() noexcept;
  const int64_t* user_id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialGraphStorageService_ReadFollowers_result__isset {
  _SocialGraphStorageService_ReadFollowers_result__isset() : success(false) {}
  bool success :1;
} _SocialGraphStorageService_ReadFollowers_result__isset;

class SocialGraphStorageService_ReadFollowers_result {
 public:

  SocialGraphStorageService_ReadFollowers_result(const SocialGraphStorageService_ReadFollowers_result&);
  SocialGraphStorageService_ReadFollowers_result& operator=(const SocialGraphStorageService_ReadFollowers_result&);
  SocialGraphStorageService_ReadFollowers_result() noexcept {
  }

  virtual ~SocialGraphStorageService_ReadFollowers_result() noexcept;
  std::vector<int64_t>  success;

  _SocialGraphStorageService_ReadFollowers_result__isset __isset;

  void __set_success(const std::vector<int64_t> & val);

  bool operator == (const SocialGraphStorageService_ReadFollowers_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_ReadFollowers_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_ReadFollowers_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialGraphStorageService_ReadFollowers_presult__isset {
  _SocialGraphStorageService_ReadFollowers_presult__isset() : success(false) {}
  bool success :1;
} _SocialGraphStorageService_ReadFollowers_presult__isset;

class SocialGraphStorageService_ReadFollowers_presult {
 public:


  virtual ~SocialGraphStorageService_ReadFollowers_presult() noexcept;
  std::vector<int64_t> * success;

  _SocialGraphStorageService_ReadFollowers_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialGraphStorageService_ReadFollowees_args__isset {
  _SocialGraphStorageService_ReadFollowees_args__isset() : user_id(false) {}
  bool user_id :1;
} _SocialGraphStorageService_ReadFollowees_args__isset;

class SocialGraphStorageService_ReadFollowees_args {
 public:

  SocialGraphStorageService_ReadFollowees_args(const SocialGraphStorageService_ReadFollowees_args&) noexcept;
  SocialGraphStorageService_ReadFollowees_args& operator=(const SocialGraphStorageService_ReadFollowees_args&) noexcept;
  SocialGraphStorageService_ReadFollowees_args() noexcept
                                               : user_id(0) {
  }

  virtual ~SocialGraphStorageService_ReadFollowees_args() noexcept;
  int64_t user_id;

  _SocialGraphStorageService_ReadFollowees_args__isset __isset;

  void __set_user_id(const int64_t val);

  bool operator == (const SocialGraphStorageService_ReadFollowees_args & rhs) const
  {
    if (!(user_id == rhs.user_id))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_ReadFollowees_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_ReadFollowees_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_ReadFollowees_pargs {
 public:


  virtual ~SocialGraphStorageService_ReadFollowees_pargs() noexcept;
  const int64_t* user_id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialGraphStorageService_ReadFollowees_result__isset {
  _SocialGraphStorageService_ReadFollowees_result__isset() : success(false) {}
  bool success :1;
} _SocialGraphStorageService_ReadFollowees_result__isset;

class SocialGraphStorageService_ReadFollowees_result {
 public:

  SocialGraphStorageService_ReadFollowees_result(const SocialGraphStorageService_ReadFollowees_result&);
  SocialGraphStorageService_ReadFollowees_result& operator=(const SocialGraphStorageService_ReadFollowees_result&);
  SocialGraphStorageService_ReadFollowees_result() noexcept {
  }

  virtual ~SocialGraphStorageService_ReadFollowees_result() noexcept;
  std::vector<int64_t>  success;

  _SocialGraphStorageService_ReadFollowees_result__isset __isset;

  void __set_success(const std::vector<int64_t> & val);

  bool operator == (const SocialGraphStorageService_ReadFollowees_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_ReadFollowees_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_ReadFollowees_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

typedef struct _SocialGraphStorageService_ReadFollowees_presult__isset {
  _SocialGraphStorageService_ReadFollowees_presult__isset() : success(false) {}
  bool success :1;
} _SocialGraphStorageService_ReadFollowees_presult__isset;

class SocialGraphStorageService_ReadFollowees_presult {
 public:


  virtual ~SocialGraphStorageService_ReadFollowees_presult() noexcept;
  std::vector<int64_t> * success;

  _SocialGraphStorageService_ReadFollowees_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialGraphStorageService_AddFollower_args__isset {
  _SocialGraphStorageService_AddFollower_args__isset() : followee_id(false), follower_id(false) {}
  bool followee_id :1;
  bool follower_id :1;
} _SocialGraphStorageService_AddFollower_args__isset;

class SocialGraphStorageService_AddFollower_args {
 public:

  SocialGraphStorageService_AddFollower_args(const SocialGraphStorageService_AddFollower_args&) noexcept;
  SocialGraphStorageService_AddFollower_args& operator=(const SocialGraphStorageService_AddFollower_args&) noexcept;
  SocialGraphStorageService_AddFollower_args() noexcept
                                             : followee_id(0),
                                               follower_id(0) {
  }

  virtual ~SocialGraphStorageService_AddFollower_args() noexcept;
  int64_t followee_id;
  int64_t follower_id;

  _SocialGraphStorageService_AddFollower_args__isset __isset;

  void __set_followee_id(const int64_t val);

  void __set_follower_id(const int64_t val);

  bool operator == (const SocialGraphStorageService_AddFollower_args & rhs) const
  {
    if (!(followee_id == rhs.followee_id))
      return false;
    if (!(follower_id == rhs.follower_id))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_AddFollower_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_AddFollower_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_AddFollower_pargs {
 public:


  virtual ~SocialGraphStorageService_AddFollower_pargs() noexcept;
  const int64_t* followee_id;
  const int64_t* follower_id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_AddFollower_result {
 public:

  SocialGraphStorageService_AddFollower_result(const SocialGraphStorageService_AddFollower_result&) noexcept;
  SocialGraphStorageService_AddFollower_result& operator=(const SocialGraphStorageService_AddFollower_result&) noexcept;
  SocialGraphStorageService_AddFollower_result() noexcept {
  }

  virtual ~SocialGraphStorageService_AddFollower_result() noexcept;

  bool operator == (const SocialGraphStorageService_AddFollower_result & /* rhs */) const
  {
    return true;
  }
  bool operator != (const SocialGraphStorageService_AddFollower_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_AddFollower_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_AddFollower_presult {
 public:


  virtual ~SocialGraphStorageService_AddFollower_presult() noexcept;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialGraphStorageService_AddFollowee_args__isset {
  _SocialGraphStorageService_AddFollowee_args__isset() : follower_id(false), followee_id(false) {}
  bool follower_id :1;
  bool followee_id :1;
} _SocialGraphStorageService_AddFollowee_args__isset;

class SocialGraphStorageService_AddFollowee_args {
 public:

  SocialGraphStorageService_AddFollowee_args(const SocialGraphStorageService_AddFollowee_args&) noexcept;
  SocialGraphStorageService_AddFollowee_args& operator=(const SocialGraphStorageService_AddFollowee_args&) noexcept;
  SocialGraphStorageService_AddFollowee_args() noexcept
                                             : follower_id(0),
                                               followee_id(0) {
  }

  virtual ~SocialGraphStorageService_AddFollowee_args() noexcept;
  int64_t follower_id;
  int64_t followee_id;

  _SocialGraphStorageService_AddFollowee_args__isset __isset;

  void __set_follower_id(const int64_t val);

  void __set_followee_id(const int64_t val);

  bool operator == (const SocialGraphStorageService_AddFollowee_args & rhs) const
  {
    if (!(follower_id == rhs.follower_id))
      return false;
    if (!(followee_id == rhs.followee_id))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_AddFollowee_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_AddFollowee_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_AddFollowee_pargs {
 public:


  virtual ~SocialGraphStorageService_AddFollowee_pargs() noexcept;
  const int64_t* follower_id;
  const int64_t* followee_id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_AddFollowee_result {
 public:

  SocialGraphStorageService_AddFollowee_result(const SocialGraphStorageService_AddFollowee_result&) noexcept;
  SocialGraphStorageService_AddFollowee_result& operator=(const SocialGraphStorageService_AddFollowee_result&) noexcept;
  SocialGraphStorageService_AddFollowee_result() noexcept {
  }

  virtual ~SocialGraphStorageService_AddFollowee_result() noexcept;

  bool operator == (const SocialGraphStorageService_AddFollowee_result & /* rhs */) const
  {
    return true;
  }
  bool operator != (const SocialGraphStorageService_AddFollowee_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_AddFollowee_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_AddFollowee_presult {
 public:


  virtual ~SocialGraphStorageService_AddFollowee_presult() noexcept;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialGraphStorageService_RemoveFollower_args__isset {
  _SocialGraphStorageService_RemoveFollower_args__isset() : followee_id(false), follower_id(false) {}
  bool followee_id :1;
  bool follower_id :1;
} _SocialGraphStorageService_RemoveFollower_args__isset;

class SocialGraphStorageService_RemoveFollower_args {
 public:

  SocialGraphStorageService_RemoveFollower_args(const SocialGraphStorageService_RemoveFollower_args&) noexcept;
  SocialGraphStorageService_RemoveFollower_args& operator=(const SocialGraphStorageService_RemoveFollower_args&) noexcept;
  SocialGraphStorageService_RemoveFollower_args() noexcept
                                                : followee_id(0),
                                                  follower_id(0) {
  }

  virtual ~SocialGraphStorageService_RemoveFollower_args() noexcept;
  int64_t followee_id;
  int64_t follower_id;

  _SocialGraphStorageService_RemoveFollower_args__isset __isset;

  void __set_followee_id(const int64_t val);

  void __set_follower_id(const int64_t val);

  bool operator == (const SocialGraphStorageService_RemoveFollower_args & rhs) const
  {
    if (!(followee_id == rhs.followee_id))
      return false;
    if (!(follower_id == rhs.follower_id))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_RemoveFollower_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_RemoveFollower_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_RemoveFollower_pargs {
 public:


  virtual ~SocialGraphStorageService_RemoveFollower_pargs() noexcept;
  const int64_t* followee_id;
  const int64_t* follower_id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_RemoveFollower_result {
 public:

  SocialGraphStorageService_RemoveFollower_result(const SocialGraphStorageService_RemoveFollower_result&) noexcept;
  SocialGraphStorageService_RemoveFollower_result& operator=(const SocialGraphStorageService_RemoveFollower_result&) noexcept;
  SocialGraphStorageService_RemoveFollower_result() noexcept {
  }

  virtual ~SocialGraphStorageService_RemoveFollower_result() noexcept;

  bool operator == (const SocialGraphStorageService_RemoveFollower_result & /* rhs */) const
  {
    return true;
  }
  bool operator != (const SocialGraphStorageService_RemoveFollower_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_RemoveFollower_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_RemoveFollower_presult {
 public:


  virtual ~SocialGraphStorageService_RemoveFollower_presult() noexcept;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

typedef struct _SocialGraphStorageService_RemoveFollowee_args__isset {
  _SocialGraphStorageService_RemoveFollowee_args__isset() : follower_id(false), followee_id(false) {}
  bool follower_id :1;
  bool followee_id :1;
} _SocialGraphStorageService_RemoveFollowee_args__isset;

class SocialGraphStorageService_RemoveFollowee_args {
 public:

  SocialGraphStorageService_RemoveFollowee_args(const SocialGraphStorageService_RemoveFollowee_args&) noexcept;
  SocialGraphStorageService_RemoveFollowee_args& operator=(const SocialGraphStorageService_RemoveFollowee_args&) noexcept;
  SocialGraphStorageService_RemoveFollowee_args() noexcept
                                                : follower_id(0),
                                                  followee_id(0) {
  }

  virtual ~SocialGraphStorageService_RemoveFollowee_args() noexcept;
  int64_t follower_id;
  int64_t followee_id;

  _SocialGraphStorageService_RemoveFollowee_args__isset __isset;

  void __set_follower_id(const int64_t val);

  void __set_followee_id(const int64_t val);

  bool operator == (const SocialGraphStorageService_RemoveFollowee_args & rhs) const
  {
    if (!(follower_id == rhs.follower_id))
      return false;
    if (!(followee_id == rhs.followee_id))
      return false;
    return true;
  }
  bool operator != (const SocialGraphStorageService_RemoveFollowee_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_RemoveFollowee_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_RemoveFollowee_pargs {
 public:


  virtual ~SocialGraphStorageService_RemoveFollowee_pargs() noexcept;
  const int64_t* follower_id;
  const int64_t* followee_id;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_RemoveFollowee_result {
 public:

  SocialGraphStorageService_RemoveFollowee_result(const SocialGraphStorageService_RemoveFollowee_result&) noexcept;
  SocialGraphStorageService_RemoveFollowee_result& operator=(const SocialGraphStorageService_RemoveFollowee_result&) noexcept;
  SocialGraphStorageService_RemoveFollowee_result() noexcept {
  }

  virtual ~SocialGraphStorageService_RemoveFollowee_result() noexcept;

  bool operator == (const SocialGraphStorageService_RemoveFollowee_result & /* rhs */) const
  {
    return true;
  }
  bool operator != (const SocialGraphStorageService_RemoveFollowee_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const SocialGraphStorageService_RemoveFollowee_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};


class SocialGraphStorageService_RemoveFollowee_presult {
 public:


  virtual ~SocialGraphStorageService_RemoveFollowee_presult() noexcept;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

};

class SocialGraphStorageServiceClient : virtual public SocialGraphStorageServiceIf {
 public:
  SocialGraphStorageServiceClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  SocialGraphStorageServiceClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void ReadFollowers(std::vector<int64_t> & _return, const int64_t user_id) override;
  void send_ReadFollowers(const int64_t user_id);
  void recv_ReadFollowers(std::vector<int64_t> & _return);
  void ReadFollowees(std::vector<int64_t> & _return, const int64_t user_id) override;
  void send_ReadFollowees(const int64_t user_id);
  void recv_ReadFollowees(std::vector<int64_t> & _return);
  void AddFollower(const int64_t followee_id, const int64_t follower_id) override;
  void send_AddFollower(const int64_t followee_id, const int64_t follower_id);
  void recv_AddFollower();
  void AddFollowee(const int64_t follower_id, const int64_t followee_id) override;
  void send_AddFollowee(const int64_t follower_id, const int64_t followee_id);
  void recv_AddFollowee();
  void RemoveFollower(const int64_t followee_id, const int64_t follower_id) override;
  void send_RemoveFollower(const int64_t followee_id, const int64_t follower_id);
  void recv_RemoveFollower();
  void RemoveFollowee(const int64_t follower_id, const int64_t followee_id) override;
  void send_RemoveFollowee(const int64_t follower_id, const int64_t followee_id);
  void recv_RemoveFollowee();
 protected:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class SocialGraphStorageServiceProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  ::std::shared_ptr<SocialGraphStorageServiceIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext) override;
 private:
  typedef  void (SocialGraphStorageServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_ReadFollowers(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_ReadFollowees(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_AddFollower(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_AddFollowee(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_RemoveFollower(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_RemoveFollowee(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  SocialGraphStorageServiceProcessor(::std::shared_ptr<SocialGraphStorageServiceIf> iface) :
    iface_(iface) {
    processMap_["ReadFollowers"] = &SocialGraphStorageServiceProcessor::process_ReadFollowers;
    processMap_["ReadFollowees"] = &SocialGraphStorageServiceProcessor::process_ReadFollowees;
    processMap_["AddFollower"] = &SocialGraphStorageServiceProcessor::process_AddFollower;
    processMap_["AddFollowee"] = &SocialGraphStorageServiceProcessor::process_AddFollowee;
    processMap_["RemoveFollower"] = &SocialGraphStorageServiceProcessor::process_RemoveFollower;
    processMap_["RemoveFollowee"] = &SocialGraphStorageServiceProcessor::process_RemoveFollowee;
  }

  virtual ~SocialGraphStorageServiceProcessor() {}
};

class SocialGraphStorageServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  SocialGraphStorageServiceProcessorFactory(const ::std::shared_ptr< SocialGraphStorageServiceIfFactory >& handlerFactory) noexcept :
      handlerFactory_(handlerFactory) {}

  ::std::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo) override;

 protected:
  ::std::shared_ptr< SocialGraphStorageServiceIfFactory > handlerFactory_;
};

class SocialGraphStorageServiceMultiface : virtual public SocialGraphStorageServiceIf {
 public:
  SocialGraphStorageServiceMultiface(std::vector<std::shared_ptr<SocialGraphStorageServiceIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~SocialGraphStorageServiceMultiface() {}
 protected:
  std::vector<std::shared_ptr<SocialGraphStorageServiceIf> > ifaces_;
  SocialGraphStorageServiceMultiface() {}
  void add(::std::shared_ptr<SocialGraphStorageServiceIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void ReadFollowers(std::vector<int64_t> & _return, const int64_t user_id) override {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->ReadFollowers(_return, user_id);
    }
    ifaces_[i]->ReadFollowers(_return, user_id);
    return;
  }

  void ReadFollowees(std::vector<int64_t> & _return, const int64_t user_id) override {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->ReadFollowees(_return, user_id);
    }
    ifaces_[i]->ReadFollowees(_return, user_id);
    return;
  }

  void AddFollower(const int64_t followee_id, const int64_t follower_id) override {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->AddFollower(followee_id, follower_id);
    }
    ifaces_[i]->AddFollower(followee_id, follower_id);
  }

  void AddFollowee(const int64_t follower_id, const int64_t followee_id) override {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->AddFollowee(follower_id, followee_id);
    }
    ifaces_[i]->AddFollowee(follower_id, followee_id);
  }

  void RemoveFollower(const int64_t followee_id, const int64_t follower_id) override {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->RemoveFollower(followee_id, follower_id);
    }
    ifaces_[i]->RemoveFollower(followee_id, follower_id);
  }

  void RemoveFollowee(const int64_t follower_id, const int64_t followee_id) override {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->RemoveFollowee(follower_id, followee_id);
    }
    ifaces_[i]->RemoveFollowee(follower_id, followee_id);
  }

};

// The 'concurrent' client is a thread safe client that correctly handles
// out of order responses.  It is slower than the regular client, so should
// only be used when you need to share a connection among multiple threads
class SocialGraphStorageServiceConcurrentClient : virtual public SocialGraphStorageServiceIf {
 public:
  SocialGraphStorageServiceConcurrentClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot, std::shared_ptr<::apache::thrift::async::TConcurrentClientSyncInfo> sync) : sync_(sync)
{
    setProtocol(prot);
  }
  SocialGraphStorageServiceConcurrentClient(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot, std::shared_ptr<::apache::thrift::async::TConcurrentClientSyncInfo> sync) : sync_(sync)
{
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(std::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, std::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void ReadFollowers(std::vector<int64_t> & _return, const int64_t user_id) override;
  int32_t send_ReadFollowers(const int64_t user_id);
  void recv_ReadFollowers(std::vector<int64_t> & _return, const int32_t seqid);
  void ReadFollowees(std::vector<int64_t> & _return, const int64_t user_id) override;
  int32_t send_ReadFollowees(const int64_t user_id);
  void recv_ReadFollowees(std::vector<int64_t> & _return, const int32_t seqid);
  void AddFollower(const int64_t followee_id, const int64_t follower_id) override;
  int32_t send_AddFollower(const int64_t followee_id, const int64_t follower_id);
  void recv_AddFollower(const int32_t seqid);
  void AddFollowee(const int64_t follower_id, const int64_t followee_id) override;
  int32_t send_AddFollowee(const int64_t follower_id, const int64_t followee_id);
  void recv_AddFollowee(const int32_t seqid);
  void RemoveFollower(const int64_t followee_id, const int64_t follower_id) override;
  int32_t send_RemoveFollower(const int64_t followee_id, const int64_t follower_id);
  void recv_RemoveFollower(const int32_t seqid);
  void RemoveFollowee(const int64_t follower_id, const int64_t followee_id) override;
  int32_t send_RemoveFollowee(const int64_t follower_id, const int64_t followee_id);
  void recv_RemoveFollowee(const int32_t seqid);
 protected:
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  std::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
  std::shared_ptr<::apache::thrift::async::TConcurrentClientSyncInfo> sync_;
};

#ifdef _MSC_VER
  #pragma warning( pop )
#endif

} // namespace

#endif
